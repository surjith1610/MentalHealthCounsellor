name: Run Integration Test and Build Custom Amazon Machine Image (AMI) Using Packer

on:
  push:
    branches:
      - main

jobs:
  integration_test:
    name: Integration test
    runs-on: ubuntu-latest

    steps:
      - name: Run integration test
        run: echo "Tests skippped for now"

  build-image:
    name: Build Custom Amazon Machine Image (AMI) Using Packer
    runs-on: ubuntu-latest
    needs: integration_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Zip repository code
        run: |
          zip -r MentalHealthCounsellor.zip .

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Packer setup
        uses: hashicorp/setup-packer@main
        with:
          packer-version: 1.7.4

      - name: List directories
        run: ls -al

      - name: Run packer
        id: packer
        run: |
          cd aws-packer
          packer init aws.pkr.hcl
          packer build -machine-readable aws.pkr.hcl | tee packer.log
          AMI_ID=$(awk -F, '/artifact,0,id/ {print $6}' packer.log | cut -d: -f2)
          echo "ami_id=$AMI_ID" >> $GITHUB_OUTPUT
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Get the Environment
        id: fetch-environment-vars
        run: |
            echo "IS_DEV_ENVIRONMENT=${{ vars.isDevEnvironment }}" >> $GITHUB_ENV
            echo "IS_DEMO_ENVIRONMENT=${{ vars.isDemoEnvironment }}" >> $GITHUB_ENV

      - name: Set the Environment
        id: determine-environment
        run: |
          if [ "${{ env.IS_DEV_ENVIRONMENT }}" == "true" ] && [ "${{ env.IS_DEMO_ENVIRONMENT }}" == "true" ]; then
            echo "ENVIRONMENTS=dev,demo" >> $GITHUB_ENV
          elif [ "${{ env.IS_DEV_ENVIRONMENT }}" == "true" ]; then
            echo "ENVIRONMENTS=dev" >> $GITHUB_ENV
          elif [ "${{ env.IS_DEMO_ENVIRONMENT }}" == "true" ]; then
            echo "ENVIRONMENTS=demo" >> $GITHUB_ENV
          else
            echo "Error: No environment provided" >&2
            exit 1
          fi

      - name: Configure DEV account AWS credentials
        if: contains(env.ENVIRONMENTS, 'dev')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Process dev environment
        if: ${{ env.ENVIRONMENTS == 'dev' || env.ENVIRONMENTS == 'dev,demo' }}
        run: |
          echo "currently running in Dev Environment..."
          echo "For now, the script will skip the deployment to the Dev environment"

      - name: Configure DEMO account AWS credentials
        run: echo "Set up AWS credentials for DEMO account"

      - name: Process demo environment
        run: |
         echo "currently running in Demo Environment..."
         echo "For now, the script will skip the deployment to the Demo environment"
        